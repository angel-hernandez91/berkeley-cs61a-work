(define (deep-map fn s)
  (cond ((null? s) s )
        ((list? (car s) ) (cons (deep-map fn (car s)) (deep-map fn (cdr s))))
        (else (cons (fn (car s)) (deep-map fn (cdr s))))
  )
)

(define (substitute s old new)
    (cond ((null? s) s)
          ((equal? (car s) old) (cons new (substitute (cdr s) old new)))
          ((list? (car s)) (cons (substitute (car s) old new) (substitute (cdr s) old new)))
          (else (cons (car s) (substitute (cdr s) old new)))
    )
)

(define (sub-all s old new) 
  (cond ((null? old) s)
        ((list? old) (sub-all (substitute s (car old) (car new)) (cdr old) (cdr new)))
        (else (substitute s old new))
  )
)